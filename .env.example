PORT=4000
AUTH_DISABLED=false
VERBOSE_REALTIME_LOGS=false

# Auth0
AUTH0_DOMAIN=your-tenant.us.auth0.com
AUTH0_AUDIENCE=https://your-api-identifier
AUTH0_ISSUER_BASE_URL=https://your-tenant.us.auth0.com/

# Azure SQL Database
AZURE_SQL_SERVER=your-sql-server.database.windows.net
AZURE_SQL_DATABASE=layer1
AZURE_SQL_USER=layer1_app
AZURE_SQL_PASSWORD=ChangeMe123!
AZURE_SQL_ENCRYPT=true
AZURE_SQL_TRUST_SERVER_CERT=false

# Azure SQL Reliability Tweaks (optional)
# Increase if you see intermittent ETIMEOUT during initial connect (default 30000ms)
SQL_CONNECT_TIMEOUT_MS=30000
# Statement/query timeout (default 60000ms)
SQL_REQUEST_TIMEOUT_MS=60000
# Max connections in the pool (default 10)
SQL_POOL_MAX=10
# Transient connect retry attempts (default 5)
SQL_RETRY_ATTEMPTS=5
# Base backoff between retries in ms (linear backoff: base * attempt)
SQL_RETRY_BACKOFF_MS=3000
# Verbose DB connection logs (set to 1 to enable)
# DB_VERBOSE=1

# Redis (BullMQ)
REDIS_URL=redis://redis:6379

# Python microservice
PYTHON_SERVICE_URL=http://python_worker:8000

# Cloudflare R2 object storage
R2_ACCOUNT_ID=
R2_ACCESS_KEY_ID=
R2_SECRET_ACCESS_KEY=
R2_BUCKET=interview-files
# Optional override (defaults to https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com if blank)
R2_ENDPOINT=

# Realtime (Socket.IO)
# No new variables are required for basic realtime; it reuses PORT and Auth settings.
# Optional (unimplemented placeholders â€“ add code before using):
# WS_ALLOWED_ORIGINS=http://localhost:3000
# REALTIME_ENABLED=true

# Optional LLM / O*NET (if integrated later)
# OPENAI_API_KEY=
# ONET_USER=
# ONET_PASSWORD=
# ONET_SKILL_CODES=15-1252.00,15-1211.00,13-1111.00

# Match scoring behavior
# When false (default) inferred requirements provided by O*NET enrichment are ignored in
# final match score calculations (only explicit textual/Gemini-derived requirements count).
# Set to true to allow inferred requirements to contribute (still capped at 20% of score).
USE_INFERRED_REQUIREMENTS=false

# Reverse proxy / domain (Caddy)
# APP_DOMAIN=api.example.com
# If using Cloudflare orange-cloud proxy, you can let Caddy manage TLS normally.

